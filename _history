{"entries":[{"timestamp":1737551243762,"editorVersion":"7.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"Key."],[-1,"DOWN"],[1,"LEFT"],[0,", An"]],"start1":2270,"start2":2270,"length1":12,"length2":12},{"diffs":[[0,"Key."],[-1,"UP"],[1,"RIGHT"],[0,", An"]],"start1":2347,"start2":2347,"length1":10,"length2":13}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"Key."],[-1,"Down"],[1,"Left"],[0,", An"]],"start1":1873,"start2":1873,"length1":12,"length2":12},{"diffs":[[0,"Key."],[-1,"Up"],[1,"Right"],[0,", An"]],"start1":2221,"start2":2221,"length1":10,"length2":13}]}]},{"timestamp":1737551266494,"editorVersion":"7.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0," '###..'"],[-1," "],[0,") or (tr"]],"start1":365,"start2":365,"length1":17,"length2":16}]}]},{"timestamp":1737552153811,"editorVersion":"7.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"'###..' "],[-1,"or"],[0,") or (tr"]],"start1":366,"start2":366,"length1":18,"length2":16}]}]},{"timestamp":1737552155358,"editorVersion":"7.0.3","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"nts = 0\n"],[1,"#my4digit = grove.create_display(DigitalPin.C18, DigitalPin.C1)"],[0,"\n\ndef up"]],"start1":117,"start2":117,"length1":16,"length2":79},{"diffs":[[0," 'left' and "],[-1,"("],[0,"matrix[3] =="]],"start1":341,"start2":341,"length1":25,"length2":24},{"diffs":[[0,"' or"],[-1," matrix[4] == '###..')"],[0,") or"]],"start1":372,"start2":372,"length1":30,"length2":8},{"diffs":[[0,"ht' and "],[-1,"("],[0,"matrix[3"]],"start1":399,"start2":399,"length1":17,"length2":16},{"diffs":[[0,"###'"],[-1," or matrix[4] == '..###')"],[0,") an"]],"start1":423,"start2":423,"length1":33,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"nts = 0\n"],[1,"// my4digit = grove.create_display(DigitalPin.C18, DigitalPin.C1)\n"],[0,"function"]],"start1":136,"start2":136,"length1":16,"length2":82},{"diffs":[[0,"= \"left\" && "],[-1,"("],[0,"matrix[3] =="]],"start1":317,"start2":317,"length1":25,"length2":24},{"diffs":[[0,"\" ||"],[-1," matrix[4] == \"###..\") ||"],[0," tre"]],"start1":348,"start2":348,"length1":33,"length2":8},{"diffs":[[0,"ght\" && "],[-1,"("],[0,"matrix[3"]],"start1":369,"start2":369,"length1":17,"length2":16},{"diffs":[[0,"###\""],[-1," || matrix[4] == \"..###\")"],[0," && "]],"start1":393,"start2":393,"length1":33,"length2":8}]}]},{"timestamp":1737552336575,"editorVersion":"7.0.3","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">50</field></shadow></value></block></statement></block><block type=\"device_button_selected_event\" x=\"273\" y=\"5\"><field name=\"NAME\">Button.B</field><value name=\"eventType\"><shadow type=\"control_button_event_click\"></shadow></value></block><block type=\"device_button_selected_event\" x=\"609\" y=\"8\"><field name=\"NAME\">Button.A</field><value name=\"eventType\"><shadow type=\"control_button_event_click\"></shadow></value></block><"],[0,"/xml>"]],"start1":181,"start2":181,"length1":13,"length2":591}]}]},{"timestamp":1737555180168,"editorVersion":"7.0.3","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":275,"start2":275,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// Hier kann man Tests durchf√ºhren; diese Datei wird nicht kompiliert, wenn dieses Paket als Erweiterung verwendet wird.\n"}]}],"snapshots":[{"timestamp":1737551243761,"editorVersion":"7.0.3","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"W:S$%6ze6`YS`86:{L{R\">tree_side</variable><variable id=\"]y2lZa.IU.dE=:3Ngf:c\">myImage</variable></variables><block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">50</field></shadow></value></block></statement></block><block type=\"device_button_selected_event\" x=\"273\" y=\"5\"><field name=\"NAME\">Button.B</field><value name=\"eventType\"><shadow type=\"control_button_event_click\"></shadow></value></block><block type=\"device_button_selected_event\" x=\"609\" y=\"8\"><field name=\"NAME\">Button.A</field><value name=\"eventType\"><shadow type=\"control_button_event_click\"></shadow></value></block></xml>","main.ts":"","README.md":"","main.py":"\ntree_side = 'left'\nmatrix = ['..#..', '###..', '..#..', '..###', '..#..']\ngame_running = False\ngame_over = False\npoints = 0\n#my4digit = grove.create_display(DigitalPin.C18, DigitalPin.C1)\n\ndef update():\n    global matrix, points, game_running, game_over\n\n    music.play_tone(Note.C, music.beat(BeatFraction.SIXTEENTH))\n\n    if (tree_side == 'left' and matrix[3] == '###..') or (tree_side == 'right' and matrix[3] == '..###') and not game_over:\n        game_running = False\n        game_over = True\n        music.play_melody(\"B A F\", 300)\n        basic.clear_screen()\n        basic.show_number(points)\n        points = 0\n        basic.pause(100)\n        game_over = False\n        \n        \n        \n    if game_running:\n        matrix.pop(4)\n        if matrix[0] == '..#..':\n            if randint(0, 1) == 0:\n                if matrix[1] == '###..':\n                    matrix.insert_at(0, '..###')\n                else:\n                    matrix.insert_at(0, '###..')\n            else:\n                matrix.insert_at(0, matrix[1])\n        else:\n            matrix.insert_at(0, '..#..')\n        points += 1\n\n\n\ndef left():\n    global tree_side, game_running\n    if game_running:\n        \n        tree_side = 'left'\n\n        update()\n    elif not game_over:\n        game_running = True\n        matrix = ['..#..', '###..', '..#..', '..###', '..#..']\n        tree_side = 'left'\n\ndef right():\n    global tree_side, game_running\n    if game_running:\n        \n\n        tree_side = 'right'\n\n        update()\n            \n    elif not game_over:\n        game_running = True\n        matrix = ['..#..', '###..', '..#..', '..###', '..#..']\n        tree_side = 'left'\n\n\ndef render():\n    basic.clear_screen()\n    for x in range(5):\n        for y in range(5):\n            if matrix[y][x] == '#':\n                led.plot(x, y)\n    if tree_side == 'left':\n        led.plot(1, 4)\n    else:\n        led.plot(3, 4)\n            \n\n            \ndef on_forever():\n    basic.pause(50)\n    if game_running:\n        render()\n        #my4digit.show(points)\n    elif game_over:\n        pass\n    else:\n        basic.plot_leds(\"\"\"\n        . # . . .\n        . # # . .\n        . # # # .\n        . # # . .\n        . # . . .\n        \"\"\")\n\n\n\n\nbasic.forever(on_forever)\ngrove.on_joystick(GroveJoystickKey.LEFT, AnalogPin.C16, AnalogPin.C17, left)\ngrove.on_joystick(GroveJoystickKey.RIGHT, AnalogPin.C16, AnalogPin.C17, right)","pxt.json":"{\n    \"name\": \"Baum hauer\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"v2\": \"*\",\n        \"Grove\": \"github:calliope-edu/pxt-grove#v0.9.2\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v7.0.3\",\n        \"tag\": \"v7.0.3\",\n        \"commits\": \"https://github.com/microsoft/pxt-calliope/commits/283622410ab91b26f46d68145d9ea311cb8e91dd\",\n        \"target\": \"7.0.3\",\n        \"pxt\": \"10.2.39\"\n    },\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1737555180168,"editorVersion":"7.0.3","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"W:S$%6ze6`YS`86:{L{R\">tree_side</variable><variable id=\"]y2lZa.IU.dE=:3Ngf:c\">myImage</variable></variables><block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">50</field></shadow></value></block></statement></block><block type=\"device_button_selected_event\" x=\"273\" y=\"5\"><field name=\"NAME\">Button.B</field><value name=\"eventType\"><shadow type=\"control_button_event_click\"></shadow></value></block><block type=\"device_button_selected_event\" x=\"609\" y=\"8\"><field name=\"NAME\">Button.A</field><value name=\"eventType\"><shadow type=\"control_button_event_click\"></shadow></value></block></xml>","main.ts":"","README.md":"","main.py":"\ntree_side = 'left'\nmatrix = ['..#..', '###..', '..#..', '..###', '..#..']\ngame_running = False\ngame_over = False\npoints = 0\n\n\ndef update():\n    global matrix, points, game_running, game_over\n\n    music.play_tone(Note.C, music.beat(BeatFraction.SIXTEENTH))\n\n    if (tree_side == 'left' and (matrix[3] == '###..' or matrix[4] == '###..')) or (tree_side == 'right' and (matrix[3] == '..###' or matrix[4] == '..###')) and not game_over:\n        game_running = False\n        game_over = True\n        music.play_melody(\"B A F\", 300)\n        basic.clear_screen()\n        basic.show_number(points)\n        points = 0\n        basic.pause(100)\n        game_over = False\n        \n        \n        \n    if game_running:\n        matrix.pop(4)\n        if matrix[0] == '..#..':\n            if randint(0, 1) == 0:\n                if matrix[1] == '###..':\n                    matrix.insert_at(0, '..###')\n                else:\n                    matrix.insert_at(0, '###..')\n            else:\n                matrix.insert_at(0, matrix[1])\n        else:\n            matrix.insert_at(0, '..#..')\n        points += 1\n\n\n\ndef left():\n    global tree_side, game_running\n    if game_running:\n        \n        tree_side = 'left'\n\n        update()\n    elif not game_over:\n        game_running = True\n        matrix = ['..#..', '###..', '..#..', '..###', '..#..']\n        tree_side = 'left'\n\ndef right():\n    global tree_side, game_running\n    if game_running:\n        \n\n        tree_side = 'right'\n\n        update()\n            \n    elif not game_over:\n        game_running = True\n        matrix = ['..#..', '###..', '..#..', '..###', '..#..']\n        tree_side = 'left'\n\n\ndef render():\n    basic.clear_screen()\n    for x in range(5):\n        for y in range(5):\n            if matrix[y][x] == '#':\n                led.plot(x, y)\n    if tree_side == 'left':\n        led.plot(1, 4)\n    else:\n        led.plot(3, 4)\n            \n\n            \ndef on_forever():\n    basic.pause(50)\n    if game_running:\n        render()\n        #my4digit.show(points)\n    elif game_over:\n        pass\n    else:\n        basic.plot_leds(\"\"\"\n        . # . . .\n        . # # . .\n        . # # # .\n        . # # . .\n        . # . . .\n        \"\"\")\n\n\n\n\nbasic.forever(on_forever)\ngrove.on_joystick(GroveJoystickKey.DOWN, AnalogPin.C16, AnalogPin.C17, left)\ngrove.on_joystick(GroveJoystickKey.UP, AnalogPin.C16, AnalogPin.C17, right)","pxt.json":"{\n    \"name\": \"Baum hauer\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"v2\": \"*\",\n        \"Grove\": \"github:calliope-edu/pxt-grove#v0.9.2\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v7.0.3\",\n        \"tag\": \"v7.0.3\",\n        \"commits\": \"https://github.com/microsoft/pxt-calliope/commits/283622410ab91b26f46d68145d9ea311cb8e91dd\",\n        \"target\": \"7.0.3\",\n        \"pxt\": \"10.2.39\"\n    },\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[],"lastSaveTime":1737555180178}